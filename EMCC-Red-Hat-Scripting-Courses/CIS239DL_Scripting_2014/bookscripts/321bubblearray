#!/bin/bash
#Script will accept 4 to 10 parameters and return the product
#of the highest and lowest parameter
#Script uses nested for loops an array and the shift command
#Mike Maguire 11-21-2007

#Allow only 4 to 10 parameters
if [[ $# -gt 10  || $# -lt 4 ]]
then
echo "USAGE: You must enter less than 11 posiional parameters and more than 3 after $0"
exit
fi

#Populate nums array with parameters
nums[0]=$1
nums[1]=$2
nums[2]=$3
nums[3]=$4
nums[4]=$5
nums[5]=$6
nums[6]=$7
nums[7]=$8
nums[8]=$9
#Shift the parameters so that 10 = 9
shift 1
nums[9]=$9

for ((z=0;z<$#+1;z++))
do
   case ${nums[$z]} in
   [0-9]|[0-9][0-9]|[0-9][0-9][0-9]) ;; 
   *) echo "${nums[$z]} is not an integer"
      read -p "Enter an integer: " nums[$z]
      ((z--));;
    esac
 done

echo
#Display entered parameters
echo "Here are the parameters you entered"
echo ${nums[*]}

#Bubble sort using a nested for loop with number of positional paramaters ($#)
for ((y=1;y<$#;y++))
do
   for ((i=0;i<$#;i++))
   do
   if [[ nums[$i] -gt nums[$i+1] ]]
   then
      temp=${nums[$i]}
      nums[$i]=${nums[$i+1]}
      nums[$i+1]=$temp
   fi
   done
done

#Display entered parameters
echo
echo "Here are your parameters sorted"
echo ${nums[*]}

#Set highest to last array element
highest=${nums[$#]}
#Set lowest to first array element
lowest=${nums[0]}
#Set total equal to lowest times highest
((total=$highest*$lowest))
echo
#Display results
echo "The product of the lowest number $lowest and the highest number $highest is $total"
echo
echo
